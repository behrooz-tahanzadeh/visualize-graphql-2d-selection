{"version":3,"file":"static/js/284.1f5db06e.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/fold/foldcode.js","../node_modules/node_modules/codemirror/addon/fold/foldgutter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"names":["CodeMirror","doFold","cm","pos","options","force","call","finder","getOption","Pos","minSize","getRange","allowFolded","range2","to","line","from","marks","findMarksAt","i","length","__isFold","cleared","clear","__name","range","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","newFoldFunction","rangeFinder","defineExtension","this","commands","toggleFold","foldCode","getCursor","fold","unfold","scanUp","foldAll","operation","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","defaultOptions","auto","minFoldSize","name","editorOptions","foldOptions","defineOption","mod","codemirror","val","old","Init","clearGutter","state","foldGutter","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","opts","indicatorOpen","indicatorFolded","isFolded","findMarks","fromPos","find","marker","spec","elt","updateFoldInfo","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","setGutterMarker","cls","RegExp","vp","getViewport","folded","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"sourceRoot":""}